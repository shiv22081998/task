

class Solution {
public:
    bool isSubsequence(string s, string t)
    {
    //PROGRAM TO FIND A GIVEN STRING IS SUBSEQUENCE OF THE GIVEN STRING//
    int n=s.length(),m=t.length();
        int dp[n+1][m+1];
       // memset(dp,0,sizeof(dp));
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==0||j==0)
                    dp[i][j]=0;
            }
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s[i-1]==t[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        if(dp[n][m]==n)
            return true;
        else
            return false;
    }
};
